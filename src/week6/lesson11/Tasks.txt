Task 2. Создать/использовать класс Авто(номер и двигатель авто). С консоли считать целое k.
Создать k объектов Авто(со случайными значениями), записать каждый объект в отдельный файл(в байтовый поток),
при этом имя файла соответсвует его номеру.

Task 3. Написать программу, которая сканирует папку(из предыдущего пример) на поиск файлов с расширением ".out", 
где в каждом файле лежит объект Авто. Десериализовать объекты из файлов в объекты и поместить их в список Авто.
Вывести на экран список Авто.

Task 4. Консольный чат с сериализацией. В главном методе запустить сервер и клиент.
Заранее определить папку, куда будут складываться файлы объектов.
Класс клиент:
 - с консоли считывает строку
 - полученную строку сериализует в отдельный файл с определенным именем и расширением ".cht".
Класс сервер: 
 - имеет в себе список строк. 
 - каждые 2 секунды сканирует заранее определенную папку и ищет "новые" файлы с расширением ".cht"
 - при нахождении "нового" файла добавляет в список новую строку.
 - после сканирования, если нашел "новый файл", то выводит весь список на экран.
 
 Task 5. Написать метод, проверяющий, является ли строка числом. 
 Воспользоваться Integer. valueOf( str ). Если строка не число, то метод должен кидать исключение NullPointerException.

Task 6. Написать метод, проверяющий, существует ли файл с определенным именем.
(Можно использовать FileReader Scanner). Если файла нет, то метод кидает исключение ArithmeticException.

Task 7. Дописать к классу Продукт свои исключения: 
 - ошибка при попытке установить отрицательную цену 
 - ошибка при попытке установить прошлогодную дату