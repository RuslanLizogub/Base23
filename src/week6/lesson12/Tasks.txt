Task 1. Создать поток, который будет каждые 10 секунд выводить текущее время на экран. 
Сделать возможность прерывания потока с помощью команды с консоли.

Task 2. Создать 100 потоков, каждый их которых выведет на экран свой номер и дождется, пока его прервут.

Task 3. Создать поток, который создаст 50 потоков, каждый их которых выведет на экран свой номер и дождется, пока его прервут. 
Прерывание дочерних потоков должно выполнятся из потока их порождающего.

ask4. Написать код для заполнения ArrayList и Vector 10000 элементами 
числами от (1, 2, 3, 4, ..., 999, 10000).Заполнять отдельными потоками,
каждый поток заполняет только по 1000 элементов.
 Посчитать скорость заполнения для ArrayList и для Vector.

Task5. Написать код для многопоточного подсчета суммы элементов набора 
Vector и ArrayList из целых чисел. Каждый поток может считать 
 только 1000 элементов. 
 Посчитать скорость выполнения для ArrayList и для Vector.

Task 6. Создать класс Product(name, code,price, kol, date), Shop(ArrayList<Product>).
Добавить в магазин 10000 продуктов со случайными значениями полей.
Написать методы:
 1) Реализовать метод двоичного поиска товара по коду
 2) Подсчет суммы всех товаров(price*kol) с помощью создания 10 потоков, каждый из которых считает по 1000 элементов в списке
 3) Реализовать метод сортировки товаров в магазине по коду
 4) Реализовать метод сортировки товаров в магазине по дате закупки
 5) Реализовать метод двоичного поиска товара по дате закупки
 6) Создать два исключения: NullProductByDateException и NullProductByCodeException

 Если в процессе поиска двоичного кода не находится товар по коду или по дате, то выкидывается соответствующее исключение.
 Провести исследование System.nanoTime()  на сколько эффективнее подсчет суммы через потоки и через цикл.